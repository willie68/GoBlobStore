# secret file contains secrets like credentials, access key ... it has the same structure as this config and will be merged on start
secretfile: ""
# true to activate the usage of a apikey (normaly as http header)
apikey: false
service:
  http:
    # port of the http server
    port: 8000
    # port of the https server for payload only
    sslport: 8443
    # this is the servicURL from outside
    serviceURL: https://localhost:8443
    # other dns names (used for certificate)
    dnss: 
      - host.docker.internal
      - localhost
    # other ips (used for certificate)
    ips: 
      - 127.0.0.1
  #configure the healthcheck system
  healthcheck:
    # period in seconds to start the healtcheck
    period: 30
    startdelay: 3

# enable/disable metrics 
metrics:
  enable: false
# configure the logging system
logging:
  level: info
  filename: ""
  gelf-url:
  gelf-port:
# main engine, you can define a retention manager, storage, cahce and backup engine, see readme for more
engine:
  retentionManager: SingleRetention
  tenantautoadd: true
  backupsyncmode: false
  allowtntbackup: false
  storage:
    storageclass: SimpleFile
    properties:
      rootpath: /data/storage
  cache:
    storageclass: FastCache
    properties:
      rootpath: /data/cache
      maxcount: 100000
      maxramusage: 1024000000
  backup:
    storageclass: #S3Storage
    properties:
      endpoint: #"http://127.0.0.1:9002"
      bucket: #"goblobstore"
      accessKey: 
      secretKey: 
      password: 
      insecure: true
# this will define the header mapping
headermapping:
  headerprefix: x-
  retention:
  tenant: 
  apikey: 
  filename:
# managing authentication and authorisation
auth:
  type: jwt
  properties: 
    validate: true
    strict: true
    tenantClaim: Tenant
    roleClaim: Roles
    rolemapping: 
        object-reader:
        object-creator:
        object-admin:
        tenant-admin:
        admin:
