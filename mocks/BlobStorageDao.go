// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	io "io"

	mock "github.com/stretchr/testify/mock"
	model "github.com/willie68/GoBlobStore/pkg/model"
)

// BlobStorageDao is an autogenerated mock type for the BlobStorageDao type
type BlobStorageDao struct {
	mock.Mock
}

// AddRetention provides a mock function with given fields: r
func (_m *BlobStorageDao) AddRetention(r *model.RetentionEntry) error {
	ret := _m.Called(r)

	var r0 error
	if rf, ok := ret.Get(0).(func(*model.RetentionEntry) error); ok {
		r0 = rf(r)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Close provides a mock function with given fields:
func (_m *BlobStorageDao) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteBlob provides a mock function with given fields: id
func (_m *BlobStorageDao) DeleteBlob(id string) error {
	ret := _m.Called(id)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteRetention provides a mock function with given fields: id
func (_m *BlobStorageDao) DeleteRetention(id string) error {
	ret := _m.Called(id)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetAllRetentions provides a mock function with given fields: callback
func (_m *BlobStorageDao) GetAllRetentions(callback func(model.RetentionEntry) bool) error {
	ret := _m.Called(callback)

	var r0 error
	if rf, ok := ret.Get(0).(func(func(model.RetentionEntry) bool) error); ok {
		r0 = rf(callback)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetBlobDescription provides a mock function with given fields: id
func (_m *BlobStorageDao) GetBlobDescription(id string) (*model.BlobDescription, error) {
	ret := _m.Called(id)

	var r0 *model.BlobDescription
	if rf, ok := ret.Get(0).(func(string) *model.BlobDescription); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.BlobDescription)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetBlobs provides a mock function with given fields: callback
func (_m *BlobStorageDao) GetBlobs(callback func(string) bool) error {
	ret := _m.Called(callback)

	var r0 error
	if rf, ok := ret.Get(0).(func(func(string) bool) error); ok {
		r0 = rf(callback)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetRetention provides a mock function with given fields: id
func (_m *BlobStorageDao) GetRetention(id string) (model.RetentionEntry, error) {
	ret := _m.Called(id)

	var r0 model.RetentionEntry
	if rf, ok := ret.Get(0).(func(string) model.RetentionEntry); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(model.RetentionEntry)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// HasBlob provides a mock function with given fields: id
func (_m *BlobStorageDao) HasBlob(id string) (bool, error) {
	ret := _m.Called(id)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Init provides a mock function with given fields:
func (_m *BlobStorageDao) Init() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ResetRetention provides a mock function with given fields: id
func (_m *BlobStorageDao) ResetRetention(id string) error {
	ret := _m.Called(id)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RetrieveBlob provides a mock function with given fields: id, w
func (_m *BlobStorageDao) RetrieveBlob(id string, w io.Writer) error {
	ret := _m.Called(id, w)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, io.Writer) error); ok {
		r0 = rf(id, w)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// StoreBlob provides a mock function with given fields: b, f
func (_m *BlobStorageDao) StoreBlob(b *model.BlobDescription, f io.Reader) (string, error) {
	ret := _m.Called(b, f)

	var r0 string
	if rf, ok := ret.Get(0).(func(*model.BlobDescription, io.Reader) string); ok {
		r0 = rf(b, f)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*model.BlobDescription, io.Reader) error); ok {
		r1 = rf(b, f)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
